<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppCaption" xml:space="preserve">
    <value>IPTViewr for movistar+ (1.5“Kruger 60” beta 1 SP1)</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>IPTViewr: virtual decoder for movistar+</value>
  </data>
  <data name="AppStatus" xml:space="preserve">
    <value>Beta (stable, but may fail/crash)</value>
  </data>
  <data name="AppVersion" xml:space="preserve">
    <value>1.5 “Kruger 60” beta 1 SP1</value>
  </data>
  <data name="BroadcastListUnableRefresh" xml:space="preserve">
    <value>Unable to obtain the list of TV channels/services</value>
  </data>
  <data name="BroadcastObtainingList" xml:space="preserve">
    <value>Obtaining list of TV channels/services...</value>
  </data>
  <data name="BroadcastParsingList" xml:space="preserve">
    <value>Parsing and extracting the list of TV channels/services...</value>
  </data>
  <data name="BroadcastServiceProperties" xml:space="preserve">
    <value>Properties of the TV channel/service</value>
  </data>
  <data name="ChannelFormActiveScan" xml:space="preserve">
    <value>The verification of available TV channels and services is in progress.
The verification has to be canceled before you can perform the requested action.</value>
  </data>
  <data name="ChannelFormActiveScanCaption" xml:space="preserve">
    <value>Services verification is in progress</value>
  </data>
  <data name="ChannelListAgeObsolete" xml:space="preserve">
    <value>The channel list can be outdated. It is over {0} days old.</value>
  </data>
  <data name="ChannelListAgeOld" xml:space="preserve">
    <value>The channel list is {0} days old.</value>
  </data>
  <data name="ChannelListCacheEmpty" xml:space="preserve">
    <value>The channel list has been obtained from the cache, but it is empty.</value>
  </data>
  <data name="ChannelListNoCache" xml:space="preserve">
    <value>No cached version of the channel list exists. You have to refresh the list.</value>
  </data>
  <data name="MyAppCtxExceptionCaption" xml:space="preserve">
    <value>Unable to start the application</value>
  </data>
  <data name="MyAppCtxExceptionMsg" xml:space="preserve">
    <value>An unexpected error has occurred while initializating the application.</value>
  </data>
  <data name="MyAppCtxInitializationErrorCaption" xml:space="preserve">
    <value>Application configuration error</value>
  </data>
  <data name="MyAppCtxStarting" xml:space="preserve">
    <value>Starting application...</value>
  </data>
  <data name="MyAppHandleExceptionDefaultCaption" xml:space="preserve">
    <value>An error has occurred while processing your request</value>
  </data>
  <data name="MyAppLoadConfigException" xml:space="preserve">
    <value>An unexpected error has occured while loading the application configuration.
The application will now end.</value>
  </data>
  <data name="MyAppLoadConfigExceptionCaption" xml:space="preserve">
    <value>Application configuration error</value>
  </data>
  <data name="MyAppRecorderLauncherNotFound" xml:space="preserve">
    <value>Unable to find the 'Recorder Launcher' program at '{0}'.</value>
  </data>
  <data name="NotProvidedDescription" xml:space="preserve">
    <value>&lt;Description has not been provided&gt;</value>
  </data>
  <data name="NotProvidedValue" xml:space="preserve">
    <value>&lt;Not provided&gt;</value>
  </data>
  <data name="OpenUrlError" xml:space="preserve">
    <value>Unable to open browser for URL '{0}'.

{1}</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="SolutionLicense" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\..\movistartv.license.txt;System.String, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="SchedulerCreateTaskOk" xml:space="preserve">
    <value>The recording task has been sucessfully created.</value>
  </data>
  <data name="SolutionLicenseRtf" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\..\movistartv.license.rtf;System.String, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="RecordDeadTvChannel" xml:space="preserve">
    <value>The selected TV channel has been marked as inactive and might not be available.

Do you still want to schedule a recording of {0}?</value>
  </data>
  <data name="Payload02DisplayName" xml:space="preserve">
    <value>Channel description and data</value>
  </data>
  <data name="Payload05DisplayName" xml:space="preserve">
    <value>Packages and channel numbers</value>
  </data>
  <data name="MyAppHandleExceptionDefaultMessage" xml:space="preserve">
    <value>No information has been supplied as to where or why the error occurred. Find error details below:</value>
  </data>
  <data name="MulticastScannerScanCompleteRefresh" xml:space="preserve">
    <value>At least one inactive service is now active. The list will be refreshed to show these new active services.</value>
  </data>
  <data name="EpgDownloadFirstTime" xml:space="preserve">
    <value>The program is about to proceed to download the electronic program guide (EPG) information for the first time. The download of the EPG is a very slow process (between 10 and 15 minutes).

During the download process, the EPG information will either be unavailable or incomplete.
In subsequent executions of the program, the EPG information will be updated in the background automatically (if more than {0} hours have ellapsed since the last update).</value>
  </data>
  <data name="EpgStatusData" xml:space="preserve">
    <value>EPG: {0}</value>
  </data>
  <data name="EpgStatusDisabled" xml:space="preserve">
    <value>EPG is disabled</value>
  </data>
  <data name="EpgStatusError" xml:space="preserve">
    <value>EPG: reception error</value>
  </data>
  <data name="EpgStatusInvalid" xml:space="preserve">
    <value>EPG: invalid data</value>
  </data>
  <data name="EpgStatusNotStarted" xml:space="preserve">
    <value>EPG: not started</value>
  </data>
  <data name="EpgStatusWait" xml:space="preserve">
    <value>EPG: waiting for data</value>
  </data>
  <data name="AppTelemetry" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\resources\apptelemetry_en.rtf;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
</root>