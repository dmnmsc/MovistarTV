// ==============================================================================
// 
//   Copyright (C) 2014-2020, GitHub/Codeplex user AlphaCentaury
//   All rights reserved.
// 
//     See 'LICENSE.MD' file (or 'license.txt' if missing) in the project root
//     for complete license information.
// 
//   http://www.alphacentaury.org/movistartv
//   https://github.com/AlphaCentaury
// 
// ==============================================================================

namespace IpTviewr.UiServices.Record.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ControlTexts {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ControlTexts() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("IpTviewr.UiServices.Record.Properties.ControlTexts", typeof(ControlTexts).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The start date/time can not be earlier than the current time..
        /// </summary>
        internal static string RecordingInvalidStartDateTime {
            get {
                return ResourceManager.GetString("RecordingInvalidStartDateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Schedule: a value is not valid or allowed.
        /// </summary>
        internal static string RecordingScheduleValidationCaption {
            get {
                return ResourceManager.GetString("RecordingScheduleValidationCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total recording time can not exceed {0:N0} days.
        ///Select an earlier date/time to limit the total recording time to less than {0:N0} days..
        /// </summary>
        internal static string RecordingTimeDateTimeSpanMaxValue {
            get {
                return ResourceManager.GetString("RecordingTimeDateTimeSpanMaxValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The end date/time can not be earlier than the recording start time..
        /// </summary>
        internal static string RecordingTimeInvalidDateTime {
            get {
                return ResourceManager.GetString("RecordingTimeInvalidDateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recording time must be at least 60 seconds (1 minute)..
        /// </summary>
        internal static string RecordingTimeInvalidTimeSpan {
            get {
                return ResourceManager.GetString("RecordingTimeInvalidTimeSpan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recording time: a value is not valid or allowed.
        /// </summary>
        internal static string RecordingTimeValidationCaption {
            get {
                return ResourceManager.GetString("RecordingTimeValidationCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 15 minutes ~ 00:15:00
        ///30 minutes ~ 00:30:00
        ///45 minutes ~ 00:45:00
        ///60 minutes (1 hour) ~ 01:00:00
        ///90 minutes ~ 01:30:00
        ///120 minutes (2 hours) ~ 02:00:00
        ///150 minutes ~ 02:30:00
        ///180 minutes (3 hours) ~ 03:00:00
        ///4 hours ~ 04:00:00
        ///5 hours ~ 05:00:00.
        /// </summary>
        internal static string RecordTimeQuickSettings {
            get {
                return ResourceManager.GetString("RecordTimeQuickSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least a day must be selected for a weekly schedule..
        /// </summary>
        internal static string WeeklyScheduleNoDays {
            get {
                return ResourceManager.GetString("WeeklyScheduleNoDays", resourceCulture);
            }
        }
    }
}
