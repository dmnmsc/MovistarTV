// ==============================================================================
// 
//   Copyright (C) 2014-2020, GitHub/Codeplex user AlphaCentaury
//   All rights reserved.
// 
//     See 'LICENSE.MD' file (or 'license.txt' if missing) in the project root
//     for complete license information.
// 
//   http://www.alphacentaury.org/movistartv
//   https://github.com/AlphaCentaury
// 
// ==============================================================================

namespace IpTviewr.RecorderLauncher.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Texts {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Texts() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("IpTviewr.RecorderLauncher.Properties.Texts", typeof(Texts).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  ok.
        /// </summary>
        internal static string DisplayActionOk {
            get {
                return ResourceManager.GetString("DisplayActionOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The recording ends today at {0:T}..
        /// </summary>
        internal static string DisplayDurationEndsToday {
            get {
                return ResourceManager.GetString("DisplayDurationEndsToday", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The recording ends tomorrow at {0:T}..
        /// </summary>
        internal static string DisplayDurationEndsTomorrow {
            get {
                return ResourceManager.GetString("DisplayDurationEndsTomorrow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ERROR: Unable to load the recording task configuration data..
        /// </summary>
        internal static string DisplayErrorLoadTaskFile {
            get {
                return ResourceManager.GetString("DisplayErrorLoadTaskFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EXCEPTION: {1}.
        /// </summary>
        internal static string DisplayExceptionFormat {
            get {
                return ResourceManager.GetString("DisplayExceptionFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launching external recorder....
        /// </summary>
        internal static string DisplayLaunchingRecorder {
            get {
                return ResourceManager.GetString("DisplayLaunchingRecorder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  ok (PID {0}).
        /// </summary>
        internal static string DisplayLaunchingRecorderOk {
            get {
                return ResourceManager.GetString("DisplayLaunchingRecorderOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading record task from database....
        /// </summary>
        internal static string DisplayLoadingXml {
            get {
                return ResourceManager.GetString("DisplayLoadingXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recorder program has finished.
        /// </summary>
        internal static string DisplayRecorderFinished {
            get {
                return ResourceManager.GetString("DisplayRecorderFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ERROR: Recording time exceeded!.
        /// </summary>
        internal static string DisplayRecordingTimeExceeded {
            get {
                return ResourceManager.GetString("DisplayRecordingTimeExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scheduled recording duration is {0}, with an additional safety margin of {1} minutes..
        /// </summary>
        internal static string DisplayScheduledDuration {
            get {
                return ResourceManager.GetString("DisplayScheduledDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task name: {0}.
        /// </summary>
        internal static string DisplayTaskName {
            get {
                return ResourceManager.GetString("DisplayTaskName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total recording time, including safety margins, will be {0}..
        /// </summary>
        internal static string DisplayTotalRecordingTime {
            get {
                return ResourceManager.GetString("DisplayTotalRecordingTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: Recording behind schedule. Gap is {0}.
        /// </summary>
        internal static string DisplayWarningBehindSchedule {
            get {
                return ResourceManager.GetString("DisplayWarningBehindSchedule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: RECORDING LATE, beyond the safety margin of {0} minutes.
        /// </summary>
        internal static string DisplayWarningRecordingLate {
            get {
                return ResourceManager.GetString("DisplayWarningRecordingLate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ERROR: No arguments have been specified.
        ///Use /HELP for more information..
        /// </summary>
        internal static string ErrorNoArguments {
            get {
                return ResourceManager.GetString("ErrorNoArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [End of inner exception list].
        /// </summary>
        internal static string ExceptionEndInnerList {
            get {
                return ResourceManager.GetString("ExceptionEndInnerList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}-{1:00}-{2:00} {3:00}-{4:00}-{5:00}.
        /// </summary>
        internal static string FormatRecordFileDate {
            get {
                return ResourceManager.GetString("FormatRecordFileDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Delayed!.
        /// </summary>
        internal static string FormatRecordFileDelayed {
            get {
                return ResourceManager.GetString("FormatRecordFileDelayed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}\{1} {2}{3}{4}.
        /// </summary>
        internal static string FormatRecordFileName {
            get {
                return ResourceManager.GetString("FormatRecordFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        internal static string InfoOk {
            get {
                return ResourceManager.GetString("InfoOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ERROR: Invalid argument format.
        ///Use /HELP for more information..
        /// </summary>
        internal static string InvalidArgumentFormat {
            get {
                return ResourceManager.GetString("InvalidArgumentFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recording time exceeded!.
        /// </summary>
        internal static string LogErrorRecordingTimeExceeded {
            get {
                return ResourceManager.GetString("LogErrorRecordingTimeExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TOO LATE! Sorry about that!.
        /// </summary>
        internal static string LogErrorTooLate {
            get {
                return ResourceManager.GetString("LogErrorTooLate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AssignProcessToJobObject({0}, {1}).
        /// </summary>
        internal static string LogExceptionAssignProcessToJobObject {
            get {
                return ResourceManager.GetString("LogExceptionAssignProcessToJobObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CreateJobObject(&apos;{0}&apos;).
        /// </summary>
        internal static string LogExceptionCreateJobObject {
            get {
                return ResourceManager.GetString("LogExceptionCreateJobObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to execute recorder program.
        /// </summary>
        internal static string LogExceptionLaunchingRecorder {
            get {
                return ResourceManager.GetString("LogExceptionLaunchingRecorder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to load the XML recording task configuration file..
        /// </summary>
        internal static string LogExceptionLoadTaskFile {
            get {
                return ResourceManager.GetString("LogExceptionLoadTaskFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SetInformationJobObject(...).
        /// </summary>
        internal static string LogExceptionSetInformationJobObject {
            get {
                return ResourceManager.GetString("LogExceptionSetInformationJobObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}
        ///Exception details: {1}.
        /// </summary>
        internal static string LoggerExceptionFormat {
            get {
                return ResourceManager.GetString("LoggerExceptionFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating Windows Job.
        /// </summary>
        internal static string LogInfoCreatingWindowsJob {
            get {
                return ResourceManager.GetString("LogInfoCreatingWindowsJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Job created.
        /// </summary>
        internal static string LogInfoCreatingWindowsJobOk {
            get {
                return ResourceManager.GetString("LogInfoCreatingWindowsJobOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launching external recorder program.
        /// </summary>
        internal static string LogInfoLaunchingRecorder {
            get {
                return ResourceManager.GetString("LogInfoLaunchingRecorder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recorder program successfully started (process Id is {0}).
        /// </summary>
        internal static string LogInfoLaunchingRecorderOk {
            get {
                return ResourceManager.GetString("LogInfoLaunchingRecorderOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading configuration data for task {0} from database
        ///{1}.
        /// </summary>
        internal static string LogInfoLoadingXml {
            get {
                return ResourceManager.GetString("LogInfoLoadingXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task configuration data loaded.
        /// </summary>
        internal static string LogInfoLoadingXmlOk {
            get {
                return ResourceManager.GetString("LogInfoLoadingXmlOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recorder program has exited (exit code is {0}).
        /// </summary>
        internal static string LogInfoRecorderExited {
            get {
                return ResourceManager.GetString("LogInfoRecorderExited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About to launch recorder program.
        /// </summary>
        internal static string LogVerboseAboutLaunchRecorder {
            get {
                return ResourceManager.GetString("LogVerboseAboutLaunchRecorder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating parameters for recorder program.
        /// </summary>
        internal static string LogVerboseCreatingRecorderParameters {
            get {
                return ResourceManager.GetString("LogVerboseCreatingRecorderParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Job handle: {0}.
        /// </summary>
        internal static string LogVerboseJobHandle {
            get {
                return ResourceManager.GetString("LogVerboseJobHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Job name: {0}.
        /// </summary>
        internal static string LogVerboseJobName {
            get {
                return ResourceManager.GetString("LogVerboseJobName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scheduled start time: {0:T}
        ///Scheduled total time: {1}
        ///Gap: {2}
        ///Real record time: {3}.
        /// </summary>
        internal static string LogVerboseScheduledStartTimeGap {
            get {
                return ResourceManager.GetString("LogVerboseScheduledStartTimeGap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WaitForExit().
        /// </summary>
        internal static string LogVerboseWaitForExit {
            get {
                return ResourceManager.GetString("LogVerboseWaitForExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recording behind schedule. Gap is {0}.
        /// </summary>
        internal static string LogWarningBehindSchedule {
            get {
                return ResourceManager.GetString("LogWarningBehindSchedule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running under development context. Windows Job creation was aborted.
        /// </summary>
        internal static string LogWarningDevelopmentWindowsJob {
            get {
                return ResourceManager.GetString("LogWarningDevelopmentWindowsJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RECORDING LATE, beyond the safety margin of {0} minutes.
        /// </summary>
        internal static string LogWarningRecordingLate {
            get {
                return ResourceManager.GetString("LogWarningRecordingLate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press any key to exit....
        /// </summary>
        internal static string PressAnyKeyEnd {
            get {
                return ResourceManager.GetString("PressAnyKeyEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IPTV Recorder launcher utility.
        /// </summary>
        internal static string ProgramCaption {
            get {
                return ResourceManager.GetString("ProgramCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} XMLTaskFile
        ///{0} /help | /h | /? | -help | -h | -?
        ///
        ///XMLTaskFile     XML file containing the record task definition.
        ///                Loads the task and launches the external recorder.
        ///
        ////help      Displays this help message.
        ///
        ///-- General options --
        ////nologo     Supresses the banner.
        ///Options and switches can be specified with &apos;/&apos; or with &apos;-&apos;.
        /// </summary>
        internal static string ProgramHelp {
            get {
                return ResourceManager.GetString("ProgramHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IPTV Recorder launcher utility
        ///Version {0}
        ///{1}. All rights reserved..
        /// </summary>
        internal static string StartLogo {
            get {
                return ResourceManager.GetString("StartLogo", resourceCulture);
            }
        }
    }
}
